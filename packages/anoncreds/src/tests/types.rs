use crate::types::{ResourceReceivePacket, ResourceReqPacket, StdAck};
use cosmwasm_std::{from_json, to_json_binary, Binary};

#[test]
fn it_serde_json_correctly() {
    // we want to ensure it uses camelCase as that is the format expected on the cheqd node
    let req = ResourceReqPacket {
        resource_id: "resuorce_id".into(),
        collection_id: "collection_id".into(),
    };

    let bin = to_json_binary(&req).unwrap();

    let string = String::from_utf8(bin.0).unwrap();
    let expected = "{\"resourceId\":\"resuorce_id\",\"collectionId\":\"collection_id\"}";

    let req_de = serde_json_wasm::from_str(expected).unwrap();
    assert_eq!(&string, expected);
    assert_eq!(req, req_de)
}

#[test]
fn it_de_resource_ack_correctly() {
    let binary = Binary(vec![
        123, 34, 114, 101, 115, 117, 108, 116, 34, 58, 34, 101, 121, 74, 115, 97, 87, 53, 114, 90,
        87, 82, 83, 90, 88, 78, 118, 100, 88, 74, 106, 90, 83, 73, 54, 101, 121, 74, 107, 89, 88,
        82, 104, 73, 106, 111, 105, 90, 88, 108, 75, 97, 71, 82, 73, 85, 110, 108, 74, 97, 110, 66,
        105, 83, 87, 48, 49, 97, 71, 74, 88, 86, 87, 108, 77, 81, 48, 112, 111, 87, 106, 74, 86,
        97, 86, 104, 89, 77, 68, 48, 105, 102, 83, 119, 105, 98, 71, 108, 117, 97, 50, 86, 107, 85,
        109, 86, 122, 98, 51, 86, 121, 89, 50, 86, 78, 90, 88, 82, 104, 90, 71, 70, 48, 89, 83, 73,
        54, 101, 121, 74, 121, 90, 88, 78, 118, 100, 88, 74, 106, 90, 85, 78, 118, 98, 71, 120,
        108, 89, 51, 82, 112, 98, 50, 53, 74, 90, 67, 73, 54, 73, 107, 70, 77, 101, 106, 108, 76,
        82, 108, 70, 70, 99, 49, 66, 88, 84, 84, 99, 49, 100, 110, 112, 72, 77, 85, 115, 53, 90,
        87, 77, 105, 76, 67, 74, 121, 90, 88, 78, 118, 100, 88, 74, 106, 90, 85, 108, 107, 73, 106,
        111, 105, 77, 84, 103, 49, 78, 106, 108, 109, 78, 106, 81, 116, 90, 68, 104, 104, 90, 67,
        48, 48, 78, 122, 77, 119, 76, 87, 73, 53, 77, 84, 107, 116, 89, 122, 81, 48, 78, 71, 73,
        119, 78, 87, 78, 105, 90, 87, 69, 51, 73, 105, 119, 105, 99, 109, 86, 122, 98, 51, 86, 121,
        89, 50, 86, 79, 89, 87, 49, 108, 73, 106, 111, 105, 85, 109, 86, 122, 98, 51, 86, 121, 89,
        50, 85, 103, 77, 83, 73, 115, 73, 110, 74, 108, 99, 50, 57, 49, 99, 109, 78, 108, 86, 109,
        86, 121, 99, 50, 108, 118, 98, 105, 73, 54, 73, 105, 73, 115, 73, 110, 74, 108, 99, 50, 57,
        49, 99, 109, 78, 108, 86, 72, 108, 119, 90, 83, 73, 54, 73, 107, 78, 77, 76, 86, 78, 106,
        97, 71, 86, 116, 89, 83, 73, 115, 73, 110, 74, 108, 99, 50, 57, 49, 99, 109, 78, 108, 81,
        87, 120, 48, 90, 88, 74, 117, 89, 88, 82, 112, 100, 109, 86, 86, 99, 109, 107, 105, 79,
        108, 116, 55, 73, 110, 86, 121, 97, 83, 73, 54, 73, 109, 82, 112, 90, 68, 112, 106, 97, 71,
        86, 120, 90, 68, 112, 48, 90, 88, 78, 48, 98, 109, 86, 48, 79, 107, 70, 77, 101, 106, 108,
        76, 82, 108, 70, 70, 99, 49, 66, 88, 84, 84, 99, 49, 100, 110, 112, 72, 77, 85, 115, 53,
        90, 87, 77, 118, 99, 109, 86, 122, 98, 51, 86, 121, 89, 50, 86, 122, 76, 122, 69, 52, 78,
        84, 89, 53, 90, 106, 89, 48, 76, 87, 81, 52, 89, 87, 81, 116, 78, 68, 99, 122, 77, 67, 49,
        105, 79, 84, 69, 53, 76, 87, 77, 48, 78, 68, 82, 105, 77, 68, 86, 106, 89, 109, 86, 104,
        78, 121, 73, 115, 73, 109, 82, 108, 99, 50, 78, 121, 97, 88, 66, 48, 97, 87, 57, 117, 73,
        106, 111, 105, 90, 71, 108, 107, 76, 88, 86, 121, 98, 67, 74, 57, 88, 83, 119, 105, 98, 87,
        86, 107, 97, 87, 70, 102, 100, 72, 108, 119, 90, 83, 73, 54, 73, 109, 70, 119, 99, 71, 120,
        112, 89, 50, 70, 48, 97, 87, 57, 117, 76, 50, 112, 122, 98, 50, 52, 105, 76, 67, 74, 106,
        99, 109, 86, 104, 100, 71, 86, 107, 73, 106, 111, 105, 77, 106, 65, 121, 77, 83, 48, 119,
        77, 83, 48, 119, 77, 86, 81, 119, 77, 68, 111, 119, 77, 68, 111, 119, 77, 70, 111, 105, 76,
        67, 74, 106, 97, 71, 86, 106, 97, 51, 78, 49, 98, 83, 73, 54, 73, 106, 65, 119, 89, 84, 65,
        119, 79, 68, 86, 105, 78, 87, 73, 52, 90, 87, 82, 108, 77, 122, 107, 51, 89, 50, 89, 53,
        90, 106, 103, 48, 78, 68, 77, 120, 90, 87, 81, 53, 77, 71, 89, 122, 78, 87, 85, 50, 90,
        106, 89, 51, 90, 87, 70, 107, 77, 50, 78, 108, 90, 71, 78, 106, 79, 84, 108, 104, 77, 109,
        85, 122, 78, 71, 78, 104, 79, 87, 85, 48, 79, 84, 78, 108, 90, 71, 89, 105, 102, 88, 48,
        61, 34, 125,
    ]);

    let ack: StdAck = from_json(&binary).unwrap();
    from_json::<ResourceReceivePacket>(&ack.unwrap()).unwrap();
}
